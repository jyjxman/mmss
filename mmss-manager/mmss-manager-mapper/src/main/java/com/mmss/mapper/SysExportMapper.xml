<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mmss.mapper.SysExportMapper" >
  <resultMap id="BaseResultMap" type="com.mmss.pojo.SysExport" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="material_id" property="materialId" jdbcType="BIGINT" />
    <result column="repository_id" property="repositoryId" jdbcType="BIGINT" />
    <result column="expoPrice" property="expoprice" jdbcType="REAL" />
    <result column="priceUnit" property="priceunit" jdbcType="VARCHAR" />
    <result column="expoDate" property="expodate" jdbcType="TIMESTAMP" />
    <result column="expoNum" property="exponum" jdbcType="INTEGER" />
    <result column="numUnit" property="numunit" jdbcType="VARCHAR" />
    <result column="expoDesc" property="expodesc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, material_id, repository_id, expoPrice, priceUnit, expoDate, expoNum, numUnit, 
    expoDesc
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mmss.pojo.SysExportExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_export
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_export
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_export
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.mmss.pojo.SysExportExample" >
    delete from sys_export
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mmss.pojo.SysExport" >
    insert into sys_export (id, material_id, repository_id, 
      expoPrice, priceUnit, expoDate, 
      expoNum, numUnit, expoDesc
      )
    values (#{id,jdbcType=BIGINT}, #{materialId,jdbcType=BIGINT}, #{repositoryId,jdbcType=BIGINT}, 
      #{expoprice,jdbcType=REAL}, #{priceunit,jdbcType=VARCHAR}, #{expodate,jdbcType=TIMESTAMP}, 
      #{exponum,jdbcType=INTEGER}, #{numunit,jdbcType=VARCHAR}, #{expodesc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mmss.pojo.SysExport" >
    insert into sys_export
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="materialId != null" >
        material_id,
      </if>
      <if test="repositoryId != null" >
        repository_id,
      </if>
      <if test="expoprice != null" >
        expoPrice,
      </if>
      <if test="priceunit != null" >
        priceUnit,
      </if>
      <if test="expodate != null" >
        expoDate,
      </if>
      <if test="exponum != null" >
        expoNum,
      </if>
      <if test="numunit != null" >
        numUnit,
      </if>
      <if test="expodesc != null" >
        expoDesc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="materialId != null" >
        #{materialId,jdbcType=BIGINT},
      </if>
      <if test="repositoryId != null" >
        #{repositoryId,jdbcType=BIGINT},
      </if>
      <if test="expoprice != null" >
        #{expoprice,jdbcType=REAL},
      </if>
      <if test="priceunit != null" >
        #{priceunit,jdbcType=VARCHAR},
      </if>
      <if test="expodate != null" >
        #{expodate,jdbcType=TIMESTAMP},
      </if>
      <if test="exponum != null" >
        #{exponum,jdbcType=INTEGER},
      </if>
      <if test="numunit != null" >
        #{numunit,jdbcType=VARCHAR},
      </if>
      <if test="expodesc != null" >
        #{expodesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mmss.pojo.SysExportExample" resultType="java.lang.Integer" >
    select count(*) from sys_export
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_export
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.materialId != null" >
        material_id = #{record.materialId,jdbcType=BIGINT},
      </if>
      <if test="record.repositoryId != null" >
        repository_id = #{record.repositoryId,jdbcType=BIGINT},
      </if>
      <if test="record.expoprice != null" >
        expoPrice = #{record.expoprice,jdbcType=REAL},
      </if>
      <if test="record.priceunit != null" >
        priceUnit = #{record.priceunit,jdbcType=VARCHAR},
      </if>
      <if test="record.expodate != null" >
        expoDate = #{record.expodate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.exponum != null" >
        expoNum = #{record.exponum,jdbcType=INTEGER},
      </if>
      <if test="record.numunit != null" >
        numUnit = #{record.numunit,jdbcType=VARCHAR},
      </if>
      <if test="record.expodesc != null" >
        expoDesc = #{record.expodesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_export
    set id = #{record.id,jdbcType=BIGINT},
      material_id = #{record.materialId,jdbcType=BIGINT},
      repository_id = #{record.repositoryId,jdbcType=BIGINT},
      expoPrice = #{record.expoprice,jdbcType=REAL},
      priceUnit = #{record.priceunit,jdbcType=VARCHAR},
      expoDate = #{record.expodate,jdbcType=TIMESTAMP},
      expoNum = #{record.exponum,jdbcType=INTEGER},
      numUnit = #{record.numunit,jdbcType=VARCHAR},
      expoDesc = #{record.expodesc,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mmss.pojo.SysExport" >
    update sys_export
    <set >
      <if test="materialId != null" >
        material_id = #{materialId,jdbcType=BIGINT},
      </if>
      <if test="repositoryId != null" >
        repository_id = #{repositoryId,jdbcType=BIGINT},
      </if>
      <if test="expoprice != null" >
        expoPrice = #{expoprice,jdbcType=REAL},
      </if>
      <if test="priceunit != null" >
        priceUnit = #{priceunit,jdbcType=VARCHAR},
      </if>
      <if test="expodate != null" >
        expoDate = #{expodate,jdbcType=TIMESTAMP},
      </if>
      <if test="exponum != null" >
        expoNum = #{exponum,jdbcType=INTEGER},
      </if>
      <if test="numunit != null" >
        numUnit = #{numunit,jdbcType=VARCHAR},
      </if>
      <if test="expodesc != null" >
        expoDesc = #{expodesc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mmss.pojo.SysExport" >
    update sys_export
    set material_id = #{materialId,jdbcType=BIGINT},
      repository_id = #{repositoryId,jdbcType=BIGINT},
      expoPrice = #{expoprice,jdbcType=REAL},
      priceUnit = #{priceunit,jdbcType=VARCHAR},
      expoDate = #{expodate,jdbcType=TIMESTAMP},
      expoNum = #{exponum,jdbcType=INTEGER},
      numUnit = #{numunit,jdbcType=VARCHAR},
      expoDesc = #{expodesc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>