<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mmss.mapper.SysStockMapper" >
  <resultMap id="BaseResultMap" type="com.mmss.pojo.SysStock" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="material_id" property="materialId" jdbcType="BIGINT" />
    <result column="repository_id" property="repositoryId" jdbcType="BIGINT" />
    <result column="stockNum" property="stocknum" jdbcType="INTEGER" />
    <result column="impoPrice" property="impoprice" jdbcType="REAL" />
    <result column="expoPrice" property="expoprice" jdbcType="REAL" />
    <result column="priceUnit" property="priceunit" jdbcType="VARCHAR" />
    <result column="stockDesc" property="stockdesc" jdbcType="VARCHAR" />
    <result column="updatDate" property="updatdate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, material_id, repository_id, stockNum, impoPrice, expoPrice, priceUnit, stockDesc, 
    updatDate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mmss.pojo.SysStockExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_stock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_stock
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_stock
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.mmss.pojo.SysStockExample" >
    delete from sys_stock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mmss.pojo.SysStock" >
    insert into sys_stock (id, material_id, repository_id, 
      stockNum, impoPrice, expoPrice, 
      priceUnit, stockDesc, updatDate
      )
    values (#{id,jdbcType=BIGINT}, #{materialId,jdbcType=BIGINT}, #{repositoryId,jdbcType=BIGINT}, 
      #{stocknum,jdbcType=INTEGER}, #{impoprice,jdbcType=REAL}, #{expoprice,jdbcType=REAL}, 
      #{priceunit,jdbcType=VARCHAR}, #{stockdesc,jdbcType=VARCHAR}, #{updatdate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mmss.pojo.SysStock" >
    insert into sys_stock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="materialId != null" >
        material_id,
      </if>
      <if test="repositoryId != null" >
        repository_id,
      </if>
      <if test="stocknum != null" >
        stockNum,
      </if>
      <if test="impoprice != null" >
        impoPrice,
      </if>
      <if test="expoprice != null" >
        expoPrice,
      </if>
      <if test="priceunit != null" >
        priceUnit,
      </if>
      <if test="stockdesc != null" >
        stockDesc,
      </if>
      <if test="updatdate != null" >
        updatDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="materialId != null" >
        #{materialId,jdbcType=BIGINT},
      </if>
      <if test="repositoryId != null" >
        #{repositoryId,jdbcType=BIGINT},
      </if>
      <if test="stocknum != null" >
        #{stocknum,jdbcType=INTEGER},
      </if>
      <if test="impoprice != null" >
        #{impoprice,jdbcType=REAL},
      </if>
      <if test="expoprice != null" >
        #{expoprice,jdbcType=REAL},
      </if>
      <if test="priceunit != null" >
        #{priceunit,jdbcType=VARCHAR},
      </if>
      <if test="stockdesc != null" >
        #{stockdesc,jdbcType=VARCHAR},
      </if>
      <if test="updatdate != null" >
        #{updatdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mmss.pojo.SysStockExample" resultType="java.lang.Integer" >
    select count(*) from sys_stock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_stock
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.materialId != null" >
        material_id = #{record.materialId,jdbcType=BIGINT},
      </if>
      <if test="record.repositoryId != null" >
        repository_id = #{record.repositoryId,jdbcType=BIGINT},
      </if>
      <if test="record.stocknum != null" >
        stockNum = #{record.stocknum,jdbcType=INTEGER},
      </if>
      <if test="record.impoprice != null" >
        impoPrice = #{record.impoprice,jdbcType=REAL},
      </if>
      <if test="record.expoprice != null" >
        expoPrice = #{record.expoprice,jdbcType=REAL},
      </if>
      <if test="record.priceunit != null" >
        priceUnit = #{record.priceunit,jdbcType=VARCHAR},
      </if>
      <if test="record.stockdesc != null" >
        stockDesc = #{record.stockdesc,jdbcType=VARCHAR},
      </if>
      <if test="record.updatdate != null" >
        updatDate = #{record.updatdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_stock
    set id = #{record.id,jdbcType=BIGINT},
      material_id = #{record.materialId,jdbcType=BIGINT},
      repository_id = #{record.repositoryId,jdbcType=BIGINT},
      stockNum = #{record.stocknum,jdbcType=INTEGER},
      impoPrice = #{record.impoprice,jdbcType=REAL},
      expoPrice = #{record.expoprice,jdbcType=REAL},
      priceUnit = #{record.priceunit,jdbcType=VARCHAR},
      stockDesc = #{record.stockdesc,jdbcType=VARCHAR},
      updatDate = #{record.updatdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mmss.pojo.SysStock" >
    update sys_stock
    <set >
      <if test="materialId != null" >
        material_id = #{materialId,jdbcType=BIGINT},
      </if>
      <if test="repositoryId != null" >
        repository_id = #{repositoryId,jdbcType=BIGINT},
      </if>
      <if test="stocknum != null" >
        stockNum = #{stocknum,jdbcType=INTEGER},
      </if>
      <if test="impoprice != null" >
        impoPrice = #{impoprice,jdbcType=REAL},
      </if>
      <if test="expoprice != null" >
        expoPrice = #{expoprice,jdbcType=REAL},
      </if>
      <if test="priceunit != null" >
        priceUnit = #{priceunit,jdbcType=VARCHAR},
      </if>
      <if test="stockdesc != null" >
        stockDesc = #{stockdesc,jdbcType=VARCHAR},
      </if>
      <if test="updatdate != null" >
        updatDate = #{updatdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mmss.pojo.SysStock" >
    update sys_stock
    set material_id = #{materialId,jdbcType=BIGINT},
      repository_id = #{repositoryId,jdbcType=BIGINT},
      stockNum = #{stocknum,jdbcType=INTEGER},
      impoPrice = #{impoprice,jdbcType=REAL},
      expoPrice = #{expoprice,jdbcType=REAL},
      priceUnit = #{priceunit,jdbcType=VARCHAR},
      stockDesc = #{stockdesc,jdbcType=VARCHAR},
      updatDate = #{updatdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>